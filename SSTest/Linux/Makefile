SOURCEDIR=../../SSCode

# All SSCode source files needed to compile executable

SSCORE_SOURCES=\
$(SOURCEDIR)/SSAngle.cpp \
$(SOURCEDIR)/SSConstellation.cpp \
$(SOURCEDIR)/SSCoordinates.cpp \
$(SOURCEDIR)/SSEvent.cpp \
$(SOURCEDIR)/SSFeature.cpp \
$(SOURCEDIR)/SSHTM.cpp \
$(SOURCEDIR)/SSIdentifier.cpp \
$(SOURCEDIR)/SSImportGJ.cpp \
$(SOURCEDIR)/SSImportHIP.cpp \
$(SOURCEDIR)/SSImportMPC.cpp \
$(SOURCEDIR)/SSImportSKY2000.cpp \
$(SOURCEDIR)/SSJPLDEphemeris.cpp \
$(SOURCEDIR)/SSMatrix.cpp \
$(SOURCEDIR)/SSMoonEphemeris.cpp \
$(SOURCEDIR)/SSMount.cpp \
$(SOURCEDIR)/SSObject.cpp \
$(SOURCEDIR)/SSOrbit.cpp \
$(SOURCEDIR)/SSPlanet.cpp \
$(SOURCEDIR)/SSPSEphemeris.cpp \
$(SOURCEDIR)/SSSerial.cpp \
$(SOURCEDIR)/SSSocket.cpp \
$(SOURCEDIR)/SSStar.cpp \
$(SOURCEDIR)/SSTime.cpp \
$(SOURCEDIR)/SSTLE.cpp \
$(SOURCEDIR)/SSUtilities.cpp \
$(SOURCEDIR)/SSVector.cpp \
$(SOURCEDIR)/SSView.cpp \
$(SOURCEDIR)/VSOP2013/ELPMPP02.cpp \
$(SOURCEDIR)/VSOP2013/VSOP2013.cpp \
$(SOURCEDIR)/VSOP2013/VSOP2013p1.cpp \
$(SOURCEDIR)/VSOP2013/VSOP2013p2.cpp \
$(SOURCEDIR)/VSOP2013/VSOP2013p3.cpp \
$(SOURCEDIR)/VSOP2013/VSOP2013p4.cpp \
$(SOURCEDIR)/VSOP2013/VSOP2013p5.cpp \
$(SOURCEDIR)/VSOP2013/VSOP2013p6.cpp \
$(SOURCEDIR)/VSOP2013/VSOP2013p7.cpp \
$(SOURCEDIR)/VSOP2013/VSOP2013p8.cpp \
$(SOURCEDIR)/VSOP2013/VSOP2013p9.cpp \

# All SSCore headers needed to compile executable

SSCORE_HEADERS=\
$(SOURCEDIR)/SSAngle.hpp \
$(SOURCEDIR)/SSConstellation.cpp \
$(SOURCEDIR)/SSCoordinates.hpp \
$(SOURCEDIR)/SSEvent.hpp \
$(SOURCEDIR)/SSFeature.hpp \
$(SOURCEDIR)/SSHTM.hpp \
$(SOURCEDIR)/SSIdentifier.hpp \
$(SOURCEDIR)/SSImportGJ.hpp \
$(SOURCEDIR)/SSImportHIP.hpp \
$(SOURCEDIR)/SSImportMPC.hpp \
$(SOURCEDIR)/SSImportSKY2000.hpp \
$(SOURCEDIR)/SSJPLDEphemeris.hpp \
$(SOURCEDIR)/SSMatrix.hpp \
$(SOURCEDIR)/SSMoonEphemeris.hpp \
$(SOURCEDIR)/SSMount.hpp \
$(SOURCEDIR)/SSObject.hpp \
$(SOURCEDIR)/SSOrbit.hpp \
$(SOURCEDIR)/SSPlanet.hpp \
$(SOURCEDIR)/SSPSEphemeris.hpp \
$(SOURCEDIR)/SSSerial.hpp\
$(SOURCEDIR)/SSSocket.hpp \
$(SOURCEDIR)/SSStar.hpp \
$(SOURCEDIR)/SSTime.hpp \
$(SOURCEDIR)/SSTLE.hpp \
$(SOURCEDIR)/SSUtilities.hpp \
$(SOURCEDIR)/SSVector.hpp \
$(SOURCEDIR)/SSView.hpp \
$(SOURCEDIR)/VSOP2013/ELPMPP02.hpp \
$(SOURCEDIR)/VSOP2013/VSOP2013.hpp \

# Name of C/C++ compiler

CC=gcc

# Command-line options passed to C/C++ compiler, including:
# -I = relative paths to directories containing header files
# -D = pre-processor macro definitions
# -O = optimization
# -W = compiler warnings

CFLAGS=-O2 \
-Wno-unused-result \
-I$(SOURCEDIR) \
-I$(SOURCEDIR)/VSOP2013

# Command-line options passed to linker, including:
# -l = names of libraries to link with
# -L = relative paths to directories containing libraries

LDFLAGS=-lstdc++ -lm -pthread

# Generate list of object files from names of C and C++ source files

CPPOBJS=$(SSCORE_SOURCES:.cpp=.o)
OBJECTS=$(CPPOBJS)
OBJECTS=$(CPPOBJS:.c=.o)

# Default target is test executable

all:	test mounttest

# This target runs the test executable, with default commend-line arguments

run:	test
	./test ../../SSData .

# These targets build object files from C and C++ source files

.c.o:
	$(CC) $(CFLAGS) -std=c11 -c $< -o $@

.cpp.o:
	$(CC) $(CFLAGS) -std=c++11 -c $< -o $@

# This target builds the test executable from object files

test:	$(OBJECTS) $(SSCORE_HEADERS) ../SSTest.cpp
	$(CC) -o sstest $(CFLAGS) ../SSTest.cpp $(OBJECTS) $(LDFLAGS)

# This target builds the test executable from object files

mounttest:	$(OBJECTS) $(SSCORE_HEADERS) ../SSMountTest.cpp
	$(CC) -o ssmounttest $(CFLAGS) ../SSMountTest.cpp $(OBJECTS) $(LDFLAGS)

# This target removes all object files, the executables,
# and CSV files generated by running the executable

clean:
	rm -f $(OBJECTS) sstest ssmounttest *.csv
